<?xml version="1.0" ?>

<!--配置 internalLogLevel, internalLogFile，可以查看NLog输出日志时的内部信息，比如你配置文件有错误，很有帮助，不过项目发布后还是关闭比较好，以免影响效率-->
<!--<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Trace"
      internalLogFile="D:\work\log.txt">-->

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">

	<!--在target外面罩了一个 <target>并且xsi:type为 AsyncWrapper，即表示这条 target 将异步输出-->
	<targets>

		<!-- 登录到一个单独的线程，可能排队到信息。当队列溢出时，丢弃任何额外消息-->
		<!-- 将日志写入文件 -->
		<target name="file" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/logs/${shortdate}.log" layout="${longdate} ${level:uppercase=true} ${event-context:item=Action} ${message} ${event-context:item=Amount} ${stacktrace}" />
		</target>

		<!-- 将日志消息写入数据库 -->
		<target name="db" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target type="Database" dbProvider="mssql" connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=EFinance;Persist Security Info=True;User ID=sa;Password=123456;">

				<commandText>
					INSERT INTO Log(Timestamp,Level,Message,Action,Amount,StackTrace) VALUES(@time_stamp, @level, @message, @action, @amount, @stacktrace);
				</commandText>

				<!-- 数据库连接参数 -->
				<parameter name="@time_stamp" layout="${date}" />
				<parameter name="@level" layout="${level:uppercase=true}" />
				<parameter name="@message" layout="${message}" />
				<parameter name="@action" layout="${event-context:item=Action}" />
				<parameter name="@amount" layout="${event-context:item=Amount}" />
				<parameter name="@stacktrace" layout="${stacktrace}" />
			</target>
		</target>

		<!--将日志消息写入Visual Studio输出-->
		<target name="debugger" xsi:type="Debugger" layout="NLog: ${date:format=HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${message}" />

		<!--输出至控制台-->
		<target name="console" xsi:type="ColoredConsole" layout="${longdate} ${message} ${exception:format=tostring}"></target>
		
		<!--输出至邮件-->
		<target xsi:type="Mail" name="infoMail"
			 smtpServer="smtp.163.com"
			 smtpPort="25"
			 smtpAuthentication="Basic"
			 smtpUserName="deno@163.com"
			 smtpPassword="demo"
			 enableSsl="true"
			 addNewLines="true"
			 from="demo@163.com"
			 to="demo@qq.com"
			 subject="Project Exception Mail"
			 header="*********************"
			 body="${longdate} | ${message} "
			 footer="*********************"/>
	</targets>

	<!--指定了三个target输出日志的级别，NLog用于输出日志的级别包括-->
	<rules>
		<!--跟踪、调试、信息、警告、错误、致命-->
		<logger name="*" minlevel="Trace" writeTo="debugger" />
		<!--信息、警告、错误、FATA-->
		<logger name="*" minlevel="Info" writeTo="db" />
		<!--调试、信息、警告、错误、致命-->
		<logger name="*" minlevel="Debug" writeTo="file" />
	</rules>
</nlog>